package com.company.controller;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletContext;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.company.dto.Product;
import com.company.service.ProductService;

@Controller
@RequestMapping("/product/")
public class ProductController {
	
	@Autowired
	private ProductService productService;
	
	@Autowired
	private ServletContext servletContext;
	
	@GetMapping("prodcutList.do")
	public String getProductList(Model model) {
	List<Product> prodcutList = productService.getProductList();
	model.addAttribute("prodcutList",prodcutList);
	return "product/prodcutList";
	}
	
	@GetMapping("productRegister.do")
	public String insProduct(Model model) {
		model.addAttribute("product",new Product());
		return "product/productRegister";
	}
	
	@PostMapping("productRegister.do")
	public String insProProduct(Product product, @RequestParam("file") MultipartFile file, Model model) {
		if (!file.isEmpty()) {
			try {
				// 파일 저장 경로 설정
				String uploadPath = servletContext.getRealPath("/resources/upload"); // 실제 경로
				File uploadDir = new File(uploadPath);
				//폴더가 없으면 생성해야지 안전함.
				if (!uploadDir.exists()) {
					uploadDir.mkdirs(); // 업로드 디렉토리가 없으면 생성
				}
				
				String fileName = UUID.randomUUID().toString() + "_" + file.getOriginalFilename();
				File saveFile = new File(uploadPath, fileName);
				file.transferTo(saveFile); // 파일 저장
				
				// Product 객체에 이미지 파일 이름 설정
				product.setImg(fileName);
				
			} catch (IOException e) {
				e.printStackTrace();
				model.addAttribute("message", "파일 업로드 중 오류가 발생했습니다.");
				return "product/productRegister";
			}
		}
		productService.insProduct(product);
		return "redirect:/product/productList.do"; // 리디렉션 경로 수정
	}
}
