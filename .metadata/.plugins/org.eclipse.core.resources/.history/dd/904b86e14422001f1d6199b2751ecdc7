package com.project.ctrl;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.project.biz.ProductService;
import com.project.domain.BasketItem;
import com.project.domain.Product;

@Controller
@RequestMapping("/basket/")
public class Basketconroller {
	
	@Autowired
	private ProductService productService;
	
	@GetMapping("basketList.do")
	public String basketList(HttpSession session, Model model) {
	    List<BasketItem> basket = (List<BasketItem>) session.getAttribute("basket");
	    model.addAttribute("basket", basket);
	    return "basket/basketList";
	}
	
	@PostMapping("addBasket.do")
	public String addBasket(
			@RequestParam("productPno") int productPno, 
			@RequestParam("quantity") int quantity, 
			HttpSession session) {
	    List<BasketItem> basket = (List<BasketItem>) session.getAttribute("basket");
	    if (basket == null) {
	        basket = new ArrayList<>();
	        session.setAttribute("basket", basket);
	    }
	    
	    Product product = productService.getProduct(productPno);
	    if (product != null) {
	        basket.add(new BasketItem(product, quantity));
	    }
	    
	    return "redirect:/basket/basketList.do";
	}
	@PostMapping("removeBasket.do")
	public String removeFromBasket(
			@RequestParam("productPno") int productPno, 
			HttpSession session) {
	    List<BasketItem> basket = (List<BasketItem>) session.getAttribute("basket");
	    if (basket != null) {
	        basket.removeIf(item -> item.getProduct().getPno() == productPno);
	    }
	    return "redirect:/basket/view";
	}
}
//@PostMapping("/add")
//public String addToBasket(@RequestParam("productId") int productId, @RequestParam("quantity") int quantity, HttpSession session) {
//    List<BasketItem> basket = (List<BasketItem>) session.getAttribute("basket");
//    if (basket == null) {
//        basket = new ArrayList<>();
//        session.setAttribute("basket", basket);
//    }
//    
//    Product product = productService.getProductById(productId);
//    if (product != null) {
//        basket.add(new BasketItem(product, quantity));
//    }
//    
//    return "redirect:/basket/view";
//}
//
//@GetMapping("/view")
//public String viewBasket(HttpSession session, Model model) {
//    List<BasketItem> basket = (List<BasketItem>) session.getAttribute("basket");
//    model.addAttribute("basket", basket);
//    return "basket/view";
//}
//
//@PostMapping("/remove")
//public String removeFromBasket(@RequestParam("productId") int productId, HttpSession session) {
//    List<BasketItem> basket = (List<BasketItem>) session.getAttribute("basket");
//    if (basket != null) {
//        basket.removeIf(item -> item.getProduct().getPno() == productId);
//    }
//    return "redirect:/basket/view";
//}