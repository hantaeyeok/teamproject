package com.project.ctrl;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.project.biz.ProductQnaService;
import com.project.domain.ProductQna;

@Controller
@RequestMapping("/productQna/")
public class ProductQnaController {
    
    @Autowired
    private ProductQnaService productQnaService;

    @GetMapping("getProductQnaList.do")
    public String getProductQnaList(Model model) {
        List<ProductQna> productQnaList = productQnaService.getProductQnaList();
        model.addAttribute("productQnaList", productQnaList);
        return "productQna/getProductQnaList";
    }

    @GetMapping("getProductQna.do")
    public String detail(@RequestParam("no") int no, Model model) {
        ProductQna productQna = productQnaService.getProductQna(no);
        model.addAttribute("productQna", productQna);
        return "productQna/getProductQna";
    }

    @GetMapping("insProductQna.do")
    public String insProductQna(Model model, @RequestParam("pno") int pno) {
        ProductQna productQna = new ProductQna();
        productQna.setPno(pno);
        model.addAttribute("productQna", productQna);
        return "productQna/insProductQna";
    }

    @PostMapping("saveProductQna.do")
    public String saveProductQna(@ModelAttribute ProductQna productQna, 
                                 @RequestParam("qimg1") MultipartFile qimg1,
                                 @RequestParam("qimg2") MultipartFile qimg2,
                                 HttpServletRequest request) throws IOException {
        
        String uploadDir = request.getServletContext().getRealPath("/resources/upload/");
        File dir = new File(uploadDir);
        
        if (!dir.exists()) {
            dir.mkdirs();
        }

        if (!qimg1.isEmpty()) {
            String img1Name = saveFile(qimg1, uploadDir);
            productQna.setQimg1(img1Name);
        }
        if (!qimg2.isEmpty()) {
            String img2Name = saveFile(qimg2, uploadDir);
            productQna.setQimg2(img2Name);
        }

        if (productQna.getNo() == 0) {
            productQnaService.insProductQna(productQna);
        } else {
            productQnaService.upProductQna(productQna);
        }
        return "redirect:/product/getProduct.do?pno=" + productQna.getPno();
    }

    @GetMapping("upProductQna.do")
    public String edit(@RequestParam("no") int no, Model model) {
        ProductQna productQna = productQnaService.getProductQna(no);
        model.addAttribute("productQna", productQna);
        return "productQna/upProductQna";
    }

    @GetMapping("delProductQna.do")
    public String delete(@RequestParam("no") int no, @RequestParam("pno") int pno) {
        productQnaService.delProductQna(no);
        return "redirect:/product/getProduct.do?pno=" + pno;
    }

    private String saveFile(MultipartFile file, String uploadDir) throws IOException {
        String originalFilename = file.getOriginalFilename();
        String newFilename = UUID.randomUUID().toString() + "_" + originalFilename;
        File serverFile = new File(uploadDir + newFilename);
        file.transferTo(serverFile);
        return newFilename;
    }
}
